In this lecture, Professor, and Doctor, Armin Biere, covered the history of SAT Solvers and the benchmarks that were set, all the way from the 1960s to now. Dr. Biere first did a little background on Satisfiability Solvers (SAT Solvers) the ground=breaking accomplishments that were made, such as the 200 TB Math Proof, which to this day is the biggest Math proof ever done by a computer or human, and the progression of Brute Force techniques which were responsible for the 200 TB Math Proof. This is all thanks to the developments of more sophisticated search algorithms which lead to the discovery of new solving-techniques that empower less elegant methods, like Brute Force.
Secondly, Prof. Biere talked directly about SAT research and the several pieces of literature written about them, like the 'Handbook of Satisfiability' 1st and 2nd Edition, as well as 'The Art of Computer Programming' with an SAT related chapter courtesy of Donald E. Knuth, professor emeritus at Stanford University. These books cataloged the progress being made on improving SAT Solvers and pushing the envelope in the realm of Computer Science.
Lastly he talked about how SAT Solvers of decades past worked, in order to compare them to the sophistication that modern SAT Solvers possess. For example DPLL in the 60s ([DaviesPutnam'62][DavisLogemannLoveland'62]) used very simple 'if' statements to check whether a logical statement was satisfiable or not. While CDCL in the 90s ([MarquesSilvaSakallah'96]) used a more complex series of propagations to see if a statement was satisfiable and then remember the conditions for an UNsatisfiable statement to avoid doing unnecessary computations.
Overall I really enjoyed this lecture. It gave a good peak behind the scenes of how SAT Solvers were developed and made me appreciate how easy it is to use them. I'd say this is well suited for 1st Semester students as they are having hands-on experience with SAT Solvers and it's beneficial to know what makes them tick.
